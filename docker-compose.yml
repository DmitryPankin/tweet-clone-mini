services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_container
    volumes:
      - .:/app
#      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@db:5432/tweet-clone
      TEST_DATABASE_URL: postgresql+asyncpg://user:password@test_db:5432/tweet-clone-test
    depends_on:
      - db
      - test_db
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: db_container
    hostname: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: tweet-clone
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  test_db:
    image: postgres:latest
    container_name: test_db_container
    hostname: test_db
    volumes:
      - test_pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: tweet-clone-test
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_container
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf.d:/etc/nginx/conf.d  # монтирование conf.d
      - ./dist:/app/dist
      - ./media:/app/media
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app-network

volumes:
  pgdata:
  test_pgdata:
networks:
  app-network:
