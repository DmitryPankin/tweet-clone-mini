name: CI

on:
  push:
    branches:
      - main  # Основная ветка продакшн
      - develop  # Ветка разработки (тест)
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    name: Code Quality Checks  # Название задания
    runs-on: ubuntu-latest  # Среда выполнения задания

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # Описание: Этот шаг клонирует ваш репозиторий на машину GitHub Actions.

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Убедитесь, что ваш проект совместим с этой версией Python
        # Описание: Этот шаг устанавливает версию Python, указанную в конфигурации.

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pre-commit
        # Описание: Этот шаг обновляет pip и устанавливает необходимые зависимости для проекта из файла requirements.txt.

      - name: Run pre-commit hooks
        run: pre-commit run --all-files
        # Описание: Этот шаг запускает все pre-commit хуки для black, isort, flake8, mypy

  test:
    name: Run Tests  # Название задания
    runs-on: ubuntu-latest  # Среда выполнения задания

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # Описание: Этот шаг клонирует ваш репозиторий на машину GitHub Actions.

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Убедитесь, что ваш проект совместим с этой версией Python
        # Описание: Этот шаг устанавливает версию Python, указанную в конфигурации.

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        # Описание: Этот шаг обновляет pip и устанавливает зависимости из файла requirements.txt.
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
        # Описание: Этот шаг устанавливает Docker Compose.

      - name: Set up Docker Compose
        run: |
          docker-compose up -d
        # Описание: Этот шаг запускает Docker Compose для создания и запуска контейнеров.

      - name: Run tests with pytest
        run: pytest
        # Описание: Этот шаг запускает тесты с использованием pytest.

      - name: Tear down Docker Compose
        if: always()
        run: docker-compose down
        # Описание: Этот шаг останавливает и удаляет контейнеры Docker Compose после завершения тестов.